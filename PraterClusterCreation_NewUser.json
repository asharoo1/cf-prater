{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Amazon ECS Cluster Creation Cloudformation Template(Prater Testnet) for New Users",
  "Parameters": {
    
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    }
  },
  "Mappings": {
    "AWSRegionToAMI": {
      "us-east-1": {
        "AMIID": "ami-09bee01cc997a78a6"
      },
      "us-east-2": {
        "AMIID": "ami-0a9e12068cb98a01d"
      },
      "us-west-1": {
        "AMIID": "ami-0fa6c8d131a220017"
      },
      "us-west-2": {
        "AMIID": "ami-078c97cf1cefd1b38"
      },
      "eu-west-1": {
        "AMIID": "ami-0c9ef930279337028"
      },
      "eu-central-1": {
        "AMIID": "ami-065c1e34da68f2b02"
      },
      "ap-northeast-1": {
        "AMIID": "ami-02265963d1614d04d"
      },
      "ap-southeast-1": {
        "AMIID": "ami-0b68661b29b9e058c"
      },
      "ap-southeast-2": {
        "AMIID": "ami-00e4b147599c13588"
      },
      "eu-west-2": {
        "AMIID": "ami-05db1ea966500fa94"
      }
    }
  },
  "Resources": {
    
    "ecsInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com", "ecs-tasks.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        ],
        "RoleName": "ecsInstanceRole",
        "Path": "/"
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "GroupName": "Validator-Cluster-SecurityGroup",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": 22,
            "ToPort": 22
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Validator-Cluster-SecurityGroup"
          }
        ]
      }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "Validator-Cluster"
      }
    },
    "ContainerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "ECSIamInstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionToAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMIID"
          ]
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Validator-Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo ECS_CLUSTER=",
                "Validator-Cluster",
                " >> /etc/ecs/ecs.config\nsudo yum update -y ecs-init\nsudo service docker restart && sudo start ecs"
                
              ]
            ]
          }
        }
      }
    },
    "ECSIamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{
            "Ref": "ecsInstanceRole"
        }]
      }
    }
  },
  "Outputs": {
    "ECSInstance": {
      "Description": "Location for Amazon ECS Instance",
      "Value": {
        "Fn::Join": [
          "",
          [
            "ec2-user@",
            {
              "Fn::GetAtt": ["ContainerInstance", "PublicDnsName"]
            }
          ]
        ]
      }
    }
  }
}